PROGRAM_NAME := Retrosmart icon theme
EXECUTABLE_NAME := retrosmart-icon-theme
DESTDIR=''
VERSION := $(shell head -n1 ChangeLog | cut -d\( -f2 | cut -d\) -f1)
ifeq ($(shell uname), Linux)
    PREFIX='/usr'
else
    PREFIX='/usr/local'
endif

all: preview.png icons

preview.png:  src/anonymous.svg src/haikuos-app_diskusage.svg src/haikuos-app_finance.svg src/application-mbox.svg src/application-x-fictionbook.svg src/application-x-glade.svg src/application-x-ms-dos-executable.svg src/application-x-remote-connection.svg src/application-x-subrip.svg src/application-x-theme.svg src/application-x-troff-man.svg src/application-x-xz.svg src/applications-games.svg src/applications-internet.svg src/applications-multimedia.svg src/audio-volume-high.svg src/autostart.svg src/battery-040-charging.svg src/camera-video.svg src/camera-web.svg src/charmap.svg src/daemon.svg src/desktop.svg src/dialog-question.svg src/display-brightness.svg src/drapes.svg src/drawer.svg src/empathy.svg src/floppy-blue.svg src/folder-pictures.svg src/folder-yellow.svg src/gnome-fs-nfs.svg src/gnome-fs-web.svg src/retrosmart-select-color.svg src/haikuos-prefs_fonts.svg src/home.svg src/retrosmart-image-svg+xml.svg src/input-mouse.svg src/keyboard-brightness.svg src/retrosmart-magnet.svg src/microphone-sensitivity-muted.svg src/network-cellular-connected.svg src/retrosmart-misc-antenna-offline.svg src/nm-adhoc.svg src/nm-device-wireless.svg src/object-flip-horizontal.svg src/pc.svg src/system-preferences.svg src/haikuos-prefs_bluetooth.svg src/haikuos-prefs_keyboard.svg src/retrosmart-socket-black.svg src/haikuos-server_syslog.svg src/text-x-java.svg src/webpositive_r2.svg
	montage -verbose -resize 64 -geometry +16+16 -tile 9x6 $^ preview.png


install:
	install -d -m 755 $(DESTDIR)/$(PREFIX)/share/icons
	cp -r $(EXECUTABLE_NAME) $(DESTDIR)/$(PREFIX)/share/icons/
	chmod -R a+rX $(DESTDIR)/$(PREFIX)/share/icons/$(EXECUTABLE_NAME)/
	install -Dm 644 COPYING $(DESTDIR)/$(PREFIX)/share/licenses/$(EXECUTABLE_NAME)/COPYING
	install -Dm 644 CREDITS $(DESTDIR)/$(PREFIX)/share/doc/$(EXECUTABLE_NAME)/CREDITS
	install -Dm 644 AUTHORS.md $(DESTDIR)/$(PREFIX)/share/doc/$(EXECUTABLE_NAME)/AUTHORS
	install -Dm 644 README.md $(DESTDIR)/$(PREFIX)/share/doc/$(EXECUTABLE_NAME)/README
	install -Dm 644 ChangeLog $(DESTDIR)/$(PREFIX)/share/doc/$(EXECUTABLE_NAME)/ChangeLog

uninstall:
	rm -rf $(PREFIX)/share/icons/$(EXECUTABLE_NAME)/
	rm -rf $(PREFIX)/share/licenses/$(EXECUTABLE_NAME)/
	rm -rf $(PREFIX)/share/doc/$(EXECUTABLE_NAME)/

clean:
	rm -rf $(EXECUTABLE_NAME) *.xz *.gz *.pot po/*.mo *.tgz *.deb *.rpm /tmp/tmp.*.$(EXECUTABLE_NAME) debian/changelog debian/README debian/files debian/$(EXECUTABLE_NAME)* debian/debhelper-build-stamp pkg

purge: clean
	rm -rf makefile preview.png
	@echo makefile deleted. Execute configure script to generate it again.


pacman: clean
	sed -i "s|_name=.*|_name=$(EXECUTABLE_NAME)|" PKGBUILD
	sed -i "s|pkgver=.*|pkgver=$(VERSION)|" PKGBUILD
	makepkg -e
	@echo Package done!
	@echo You can install it as root with:
	@echo pacman -U $(EXECUTABLE_NAME)-local-$(VERSION)-1-any.pkg.tar.xz

dpkg: clean
	cp README.md debian/README
	cp ChangeLog debian/changelog
	#fakeroot debian/rules clean
	#fakeroot debian/rules build
	fakeroot debian/rules binary
	mv ../$(EXECUTABLE_NAME)_$(VERSION)_all.deb .
	@echo Package done!
	@echo You can install it as root with:
	@echo dpkg -i $(EXECUTABLE_NAME)_$(VERSION)_all.deb
